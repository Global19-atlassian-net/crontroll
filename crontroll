#!/bin/sh
banner="\
#                                    ▗▄▖  ▗▄▖
#                      ▐▌            ▝▜▌  ▝▜▌
#  ▟██▖ █▟█▌ ▟█▙ ▐▙██▖▐███  █▟█▌ ▟█▙  ▐▌   ▐▌
# ▐▛  ▘ █▘  ▐▛ ▜▌▐▛ ▐▌ ▐▌   █▘  ▐▛ ▜▌ ▐▌   ▐▌
# ▐▌    █   ▐▌ ▐▌▐▌ ▐▌ ▐▌   █   ▐▌ ▐▌ ▐▌   ▐▌
# ▝█▄▄▌ █   ▝█▄█▘▐▌ ▐▌ ▐▙▄  █   ▝█▄█▘ ▐▙▄  ▐▙▄
#  ▝▀▀  ▀    ▝▀▘ ▝▘ ▝▘  ▀▀  ▀    ▝▀▘   ▀▀   ▀▀
#"
set -e
if [ -z "${CRONDIR}" ];then
    crondir="$HOME/.cron"
else
    crondir="${CRONDIR}"
fi
if [ -z "${CRONLOGDIR}" ];then
    logdir="$HOME/.logs/cronjobs"
else
    logdir="${CRONLOGDIR}"
fi
if [ ! -d  "$crondir" ];then
    echo "$crondir doesn't exist yet. Set up your cron files first"
    exit 1
fi

logcommand=" 2>&1 | awk '{ print strftime(\"%%Y-%%m-%%d %%H:%%M:%%S\"), \$0;}' >> %s/current"
if command -v svlogd  > /dev/null;then
    logcommand=" 2>&1 | svlogd -tt %s"
fi

cd $crondir

help(){
    echo "Usage:"
    echo "crontroll status <cronjob>    get status of cronjob"
    echo "crontroll enable <cronjob>    enable cronjob"
    echo "crontroll disable <cronjob>   disable cronjob"
    echo "crontroll reload              reload cronjobs after adding or removing files in $crondir"
    echo "crontroll list                list all configured cron jobs"
    echo "crontroll now <cronjob>       run cronjob now"
}

checkargs(){
    if [ -z "$1" ];then
        >&2 echo "Not enough arguments"
        help
        exit 1
    fi
}

reload_crontab(){
    mkdir -p $logdir
    if ls * 1> /dev/null 2>&1; then
        echo "$banner"
        echo "# This crontab is managed by crontroll. Do not edit it manually, as it will get overwritten"
        echo -n "\n\n\n"
        for f in *;do
            mkdir -p "$logdir/$f"
            data="`cat $f`"
            echo "# $f"
            echo -n "$data"
            printf "$logcommand" "$logdir/$f"
            echo "\n"
        done
    fi|crontab -
}

list(){
    if [ -n "`ls`" ];then
        for c in *;do
            output=""
            res=`main status $c|cut -d: -f1`
            if [ "$res" = "enabled" ];then
                if [ -t 1 ] ;then
                    output="$output\033[0;32m"
                fi
                output="$output[x]"
            else
                if [ -t 1 ] ;then
                    output="$output\033[2m"
                fi
                output="$output[ ]"
            fi
            output="$output $c"
            if [ -t 1 ] ;then
                output="$output\033[0m"
            fi
            printf "$output\n"
        done
    fi
}

main(){
    command=$1
    if [ -n "$command" ];then
        shift
    fi
    comm1=`printf %.1s "$command"`
    if [ "${comm1}" = "r" ];then
        reload_crontab
        exit
    elif [ "${comm1}" = "l" ];then
        list
        exit
    fi
    checkargs $@
    for f in "$@";do
        if [ ! -f "$f" ];then
            >&2 echo "$f not found"
            exit 1
        fi
        filecontent="`cat $f`"
        firstletter=`printf %.1s "$filecontent"`
        if [ "$firstletter" = '#' ];then
            cronjob="`echo \"${filecontent}\"|sed 's/^.//'`"
        else
            cronjob="${filecontent}"
        fi
        if [ "${comm1}" = "d" ]; then
            donesomething=true
            printf "#%s\n" "$cronjob" > $f
            reload_crontab
        elif [ "${comm1}" = "e" ];then
            donesomething=true
            printf "%s\n" "$cronjob" > $f
            reload_crontab
        elif [ "${comm1}" = "n" ];then
            donesomething=true
            command=`cut -d" " -f6- < $f`
            command="$command `printf "$logcommand" "$logdir/$f"`"
            eval "$command"
        elif [ "${comm1}" = "s" ];then
            donesomething=true
            if [ "$firstletter" = '#' ];then
                status="disabled"
            else
                status="enabled"
            fi
            printf "%s: %s; %s\n" "$status" "$f" "$cronjob"
        fi
    done
    if ! $donesomething;then
        checkargs $command
        >&2 echo "Unknown command: $command"
    fi
}

main $@
